name: Push Docker image to Google Artifact Registry Reusable Workflow

permissions:
  contents: 'read'
  id-token: 'write'
  attestations: 'write'

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      build_id:
        required: true
        type: string
      context:
        required: false
        type: string
        default: .
      dockerfile:
        required: false
        type: string
        default: Dockerfile
      sbom:
        required: false
        type: boolean
        default: true
      provenance:
        required: false
        type: boolean
        default: true
      labels:
        required: false
        type: string
    secrets:
      ARTIFACT_REGISTRY_HOST_NAME:
        required: true
      PROJECT_ID:
        required: true
      WI_POOL_PROVIDER_ID:
        required: true
      PACKAGER_GSA_ID:
        required: true
      IMAGE_REPO_ID:
        required: true

jobs:
  build-and-push-docker-gar:
    runs-on: ubuntu-latest
    env:
      IMAGE_NAME: ${{ secrets.ARTIFACT_REGISTRY_HOST_NAME }}/${{ secrets.PROJECT_ID }}/${{ secrets.IMAGE_REPO_ID }}/${{ inputs.app_name }}
    steps:

      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Authenticate to Google Cloud using OIDC
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: '${{ secrets.WI_POOL_PROVIDER_ID }}'
          service_account: '${{ secrets.PACKAGER_GSA_ID }}'
          token_format: 'access_token'

      # Set up Docker Buildx for advanced build capabilities
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker for GAR
        run: |
          gcloud auth configure-docker ${{ secrets.ARTIFACT_REGISTRY_HOST_NAME }} --quiet

      # Print Docker config for debugging
      - name: Print Docker config
        run: |
          cat /home/runner/.docker/config.json

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.ARTIFACT_REGISTRY_HOST_NAME }}
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}
          logout: true

      # Print Docker config after docker login for debugging
      - name: Print Docker config after docker login
        run: |
          cat /home/runner/.docker/config.json

      # Build and push the Docker image to Google Artifact Registry, generating provenance and SBOM
      - name: Build and push
        id: build-and-push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: ${{ inputs.context }}
          file: ${{ inputs.dockerfile }}
          tags: |
            ${{ env.IMAGE_NAME }}:${{ inputs.build_id }}
            ${{ env.IMAGE_NAME }}:latest
          labels: ${{ inputs.labels }}
          provenance: ${{ inputs.provenance }}
          sbom: ${{ inputs.sbom }}

      - name: Show build digest
        run: |
          echo "Digest: ${{ steps.build-and-push.outputs.digest }}"

      # # Publish a provenance attestation for the built image
      # - name: Publish image attestations
      #   uses: actions/attest-build-provenance@v2
      #   with:
      #     subject-name: ${{ env.IMAGE_NAME }}
      #     subject-digest: ${{ steps.build-and-push.outputs.digest }}
      #     push-to-registry: true